
-----

docs(changelog): update changelog for version 0.4.0 and add missing release date

-----

fix(docs): update documentation to reflect latest changes

-----

refactor(app): restructure to use session-based architecture and fix authentication docs
-----

chore(cors): allow https://shoppica-26gr.onrender.com in CORS policy

-----



-----

fix(auth): correct admin permission handling in session

Fixed an issue where session['is_admin'] was incorrectly set to false
despite correct authentication. Now the admin status is stored properly
upon login and used consistently in route protection.

-----

chore(cors): add shoppica-testsite.onrender.com to allowed origins

-----

fix(addresses): ensure Row objects are converted to dict for JSON serialization

Fixed a TypeError caused by attempting to jsonify a database Row object.
Now all Row results are converted to dictionaries before being returned 
in the API response.
-----

fix(address): handle missing address and ensure JSON serialization

- Convert address Row object to dict before returning in JSON response
- Improve logging clarity when address is not found
- Include user ID and admin status in missing address warnings
- Ensure 404 response is properly returned if address does not exist



-----

fix: convert Row objects to dict before jsonify in admin endpoints

- Fixed TypeError caused by attempting to jsonify sqlite3.Row objects
- Applied conversion to dict in both get_addresses_by_user_as_admin and get_all_addresses_paginated
- Ensured consistent and valid JSON responses in admin endpoints

-----

feat: add product_images table with API endpoints and documentation updates

- Added new `product_images` table to store multiple images per product
- Implemented API endpoints for uploading and retrieving product images
- Updated database schema documentation to include `product_images`
- Modified product-related API documentation to reference image endpoints

-----

fix: serialize SQLite Row objects in cart item APIs and improve error handling

- Fixed TypeError caused by returning sqlite3.Row directly in Flask's jsonify
- Wrapped all fetched rows with dict() before JSON serialization (single + list)
- Ensured compatibility across all cart item endpoints (user & admin)
- Improved error logging using logger.error with exc_info=True
- Applied ownership checks using session-based decorator with g.cart_item injection
- Refactored decorator to reduce DB calls by reusing fetched item
- Aligned API behavior with updated documentation and consistent response formats

-----

Fix: Replace .get() with dict-style access for sqlite3.Row compatibility in discount usage endpoints